apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: 3scale-gateway
  annotations:
    description: "3scale API Gateway"
    iconClass: "icon-load-balancer"
    tags: "api,gateway,3scale"
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    generation: 2
    name: ${THREESCALE_GATEWAY_NAME}-centos
  spec:
    dockerImageRepository: quay.io/centos/centos
    tags:
    - from:
        kind: DockerImage
        name: centos/centos:7
      name: "7"
  status:
    dockerImageRepository: "quay.io/centos/centos"
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    generation: 1
    name: ${THREESCALE_GATEWAY_NAME}
  spec:
    tags:
    - from:
        kind: DockerImage
        name: ${THREESCALE_GATEWAY_NAME}:latest
      name: latest
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    name: ${THREESCALE_GATEWAY_NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${THREESCALE_GATEWAY_NAME}:latest
    resources: {}
    source:
      git:
        ref: master
        uri: https://github.com/3scale/docker-gateway.git
      type: Git
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: ${THREESCALE_GATEWAY_NAME}-centos:7
      type: Docker
    triggers:
    - github:
        secret: secret
      type: GitHub
    - generic:
        secret: secret
      type: Generic
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    name: ${THREESCALE_GATEWAY_NAME}
  spec:
    replicas: 2
    selector:
      deploymentconfig: ${THREESCALE_GATEWAY_NAME}
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          deploymentconfig: ${THREESCALE_GATEWAY_NAME}
      spec:
        containers:
        - env:
          - name: THREESCALE_ADMIN_URL
            value: ${THREESCALE_ADMIN_URL}
          - name: THREESCALE_PROVIDER_KEY
            value: ${THREESCALE_PROVIDER_KEY}
          - name: RESOLVER
            value: ${RESOLVER}
          image: ${THREESCALE_GATEWAY_NAME}
          imagePullPolicy: Always
          name: docker-gateway
          livenessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 30
            timeoutSeconds: 1
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - docker-gateway
        from:
          kind: ImageStreamTag
          name: ${THREESCALE_GATEWAY_NAME}:latest
      type: ImageChange
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: ${THREESCALE_GATEWAY_NAME}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentconfig: ${THREESCALE_GATEWAY_NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
parameters:
- description: 3scale account endpoint
  name: THREESCALE_ADMIN_URL
  value: https://MYDOMAIN-admin.3scale.net
  required: true
- description: 3scale account provider key
  value:
  name: THREESCALE_PROVIDER_KEY
  required: true
- description: Name for the 3scale API Gateway
  value: threescalegw
  name: THREESCALE_GATEWAY_NAME
  required: true
- description: DNS Resolver for openresty
  value:
  name: RESOLVER
  required: false
