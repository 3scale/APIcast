
upstream upstream {
  server 0.0.0.1:1;

  balancer_by_lua_block {
    local round_robin = require 'resty.balancer.round_robin'

    local balancer = round_robin.new()
    local peers = balancer:peers(ngx.ctx.upstream)

    local peer, err = balancer:set_peer(peers)

    if not peer then
      ngx.status = ngx.HTTP_SERVICE_UNAVAILABLE
      ngx.log(ngx.ERR, "failed to set current upstream peer: ", err)
      ngx.exit(ngx.status)
    end
  }

  keepalive 32;
}

upstream backend_upstream {
  server 0.0.0.1:1;

  balancer_by_lua_block {
      local round_robin = require 'resty.balancer.round_robin'

      local balancer = round_robin.new()
      local peers = balancer:peers(ngx.ctx.backend_upstream)

      local peer, err = balancer:set_peer(peers)

      if not peer then
        ngx.status = ngx.HTTP_SERVICE_UNAVAILABLE
        ngx.log(ngx.ERR, "failed to set current backend peer: ", err)
        ngx.exit(ngx.status)
      end
  }

  keepalive 32;
}
