apiVersion: v1
kind: Template
metadata:
  name: sso-proxy
  annotations:
    description: "RH-SSO proxy based on APIcast that enables TLS client certificate authentication"
    iconClass: "icon-load-balancer"
    tags: "api,gateway,3scale"
objects:

- apiVersion: v1
  kind: Service
  metadata:
    name: "${NAME}"
    annotations:
      service.alpha.openshift.io/serving-cert-secret-name: "${NAME}-tls"
  spec:
    ports:
    - name: register
      port: 8444
      protocol: TCP
      targetPort: 8444
    - name: proxy
      port: 8443
      protocol: TCP
      targetPort: 8443
    - name: management
      port: 8090
      protocol: TCP
      targetPort: 8090
    selector:
      deploymentconfig: "${NAME}"

- apiVersion: v1
  kind: Route
  metadata:
    name: "${NAME}-register"
  spec:
    host: ${SSO_REGISTER_HOSTNAME}
    port:
      targetPort: register
    tls:
      termination: Passthrough
    to:
      kind: Service
      name: "${NAME}"
      weight: 100

- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: "${NAME}-apicast-conf"
  data:
    apicast.conf: |-
      {
        "services": [
          {
            "id": ${SERVICE_ID},
            "backend_version": 1,
            "backend_authentication_type": "service_token",
            "backend_authentication_value": "${SERVICE_TOKEN}",
            "proxy": {
              "api_backend": "https://${SSO_BACK_HOSTNAME}:8443",
              "hosts": [
                "localhost",
                "127.0.0.1",
                "${SSO_REGISTER_HOSTNAME}"
              ],
              "auth_user_key": "apikey",
              "credentials_location": "headers",
              "policy_chain": [
                { "name": "apicast.policy.phase_logger" },
                { "name": "custom.policy.require_tls_certificate" },
                { "name": "apicast.policy.apicast" },
                { "name": "custom.policy.sso_certificate_registration" }
              ],
              "proxy_rules": [
                {
                  "http_method": "POST",
                  "pattern": "/auth/realms/{realm}/register$",
                  "metric_system_name": "hits",
                  "delta": 1
                }
              ]
            }
          }
        ]
      }


- apiVersion: v1
  kind: Route
  metadata:
    name: "${NAME}"
  spec:
    host: ${SSO_PROXY_HOSTNAME}
    port:
      targetPort: proxy
    tls:
      termination: Passthrough
    to:
      kind: Service
      name: "${NAME}"
      weight: 100

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: "${NAME}"
  spec:
    replicas: 1
    selector:
      deploymentconfig: "${NAME}"
    strategy:
      type: Rolling
    template:
      metadata:
        labels:
          deploymentconfig: "${NAME}"
      spec:
        containers:
        - env:
          # Environment Variables used by this customization of APIcast
          - name: THREESCALE_PORTAL_ENDPOINT
            value: "${THREESCALE_PORTAL_ENDPOINT}"
          - name: THREESCALE_CONFIG_FILE
            value: "/opt/app-root/src/conf/custom/apicast.conf"
          - name: SSL_CERT_FILE
            value: "/opt/app-root/src/conf/trust/ca-bundle.crt"
          - name: SSL_CRL_FILE
            value: "/opt/app-root/src/conf/trust/crl.pem"
          - name: SSO_FRONT_HOSTNAME
            value: "${SSO_PROXY_HOSTNAME}"
          - name: SSO_BACK_HOSTNAME
            value: "${SSO_BACK_HOSTNAME}"
          - name: SSO_REALMS_TO_PROTECT
            value: "${SSO_REALMS_TO_PROTECT}"
          # APIcast standard environment variables
          - name: BACKEND_ENDPOINT_OVERRIDE
            value: "${BACKEND_ENDPOINT_OVERRIDE}"
          - name: THREESCALE_DEPLOYMENT_ENV
            value: "${DEPLOYMENT_ENVIRONMENT}"
          - name: RESOLVER
            value: "${RESOLVER}"
          - name: APICAST_CONFIGURATION_LOADER
            value: "${CONFIGURATION_LOADER}"
          - name: APICAST_BACKEND_CACHE_HANDLER
            value: "${BACKEND_CACHE_HANDLER}"
          - name: APICAST_LOG_LEVEL
            value: "${LOG_LEVEL}"
          - name: APICAST_RESPONSE_CODES
            value: "${RESPONSE_CODES}"
          - name: APICAST_CONFIGURATION_CACHE
            value: "${CONFIGURATION_CACHE}"
          - name: APICAST_MANAGEMENT_API
            value: "${MANAGEMENT_API}"
          - name: OPENSSL_VERIFY
            value: "${OPENSSL_VERIFY}"
          image: " "
          imagePullPolicy: Always
          name: "${NAME}"
          livenessProbe:
            httpGet:
              path: /status/live
              port: management
            initialDelaySeconds: 10
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: /status/ready
              port: management
            initialDelaySeconds: 15
            timeoutSeconds: 1
          ports:
          - name: register
            containerPort: 8444
            protocol: TCP
          - name: proxy
            containerPort: 8443
            protocol: TCP
          - name: management
            containerPort: 8090
            protocol: TCP
          volumeMounts:
          - mountPath: /opt/app-root/src/conf/custom/
            name: "${NAME}-apicast-conf"
          - mountPath: /opt/app-root/src/conf/trust/
            name: "${NAME}-ca"
          - mountPath: /opt/app-root/src/conf/serving-cert/
            name: "${NAME}-tls"
        volumes:
        - name: "${NAME}-apicast-conf"
          configMap:
            name: "${NAME}-apicast-conf"
        - name: "${NAME}-ca"
          configMap:
            name: "${CA_TRUST_CONFIGMAP}"
        - name: "${NAME}-tls"
          secret:
            secretName: "${NAME}-tls"

    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - "${NAME}"
        from:
          kind: ImageStreamTag
          name: ${IMAGESTREAM_TAG}
          namespace: ${IMAGESTREAM_NAMESPACE}

parameters:
- description: The registration service id on the 3scale platform
  name: SERVICE_ID
  required: true

- description: The registration service token on the 3scale platform
  name: SERVICE_TOKEN
  required: true

- description: The hostname of the RH-SSO service
  name: SSO_BACK_HOSTNAME
  required: true

- description: The list of all RH-SSO realms to protect, separated by a pipe
  name: SSO_REALMS_TO_PROTECT
  required: true

- description: "URL of the 3scale admin endpoint, including credentials"
  name: THREESCALE_PORTAL_ENDPOINT
  required: true

- description: "URL of the 3scale backend, including credentials"
  name: BACKEND_ENDPOINT_OVERRIDE
  required: true

- description: "DNS name for the register endpoint"
  name: SSO_REGISTER_HOSTNAME
  required: true

- description: "DNS name for the proxy endpoint"
  name: SSO_PROXY_HOSTNAME
  required: true

- description: "Name of the ConfigMap holding the CA Bundle and the CRL Bundle"
  name: CA_TRUST_CONFIGMAP
  value: sso-proxy-ca
  required: true

- description: "The OpenShift ImageStreamTag that contains the customized APIcast image"
  value: 'apicast:latest'
  name: IMAGESTREAM_TAG
  required: true

- description: "The namespace of the OpenShift ImageStreamTag that contains the customized APIcast image"
  value: 'openshift'
  name: IMAGESTREAM_NAMESPACE
  required: true

- description: "Deployment environment. Can be sandbox or production."
  value: production
  name: DEPLOYMENT_ENVIRONMENT
  required: true

- description: "Name for this component"
  value: sso-proxy
  name: NAME
  required: true

- description: "DNS Resolver for openresty, if empty it will be autodiscovered"
  value:
  name: RESOLVER
  required: false

- name: CONFIGURATION_LOADER
  description: "When to load configuration. If on gateway start or incoming request. Allowed values are: lazy, boot."
  value: lazy
  required: false

- name: BACKEND_CACHE_HANDLER
  description: "How to handle and cache backend authorization responses. Can be one of: strict, resilient."
  value: strict
  required: false

- description: "Log level. One of the following: debug, info, notice, warn, error, crit, alert, or emerg."
  name: LOG_LEVEL
  value: info
  required: false

- description: "Enable logging response codes to 3scale."
  value: "false"
  name: RESPONSE_CODES
  required: false

- name: CONFIGURATION_CACHE
  description: "For how long to cache the downloaded configuration in seconds. Can be left empty, 0 or greater than 60."
  value: "0"
  required: false

- name: MANAGEMENT_API
  description: "Scope of the Management API. Can be disabled, status or debug. At least status required for health checks."
  required: false
  value: "status"

- name: OPENSSL_VERIFY
  description: "Turn on/off the OpenSSL peer verification. Can be set to true/false."
  required: true
  value: "false"
